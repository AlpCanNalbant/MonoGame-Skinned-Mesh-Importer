<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SkinnedMeshImporter</name>
    </assembly>
    <members>
        <member name="M:SkinnedMeshImporter.AssimpHelpers.correctValue(System.Single)">
            <summary> Takes the given <paramref name="value"/>, if it is infinity or NaN, returns <c>0.0</c>, otherwise returns <paramref name="value"/>. </summary>
            <param name="value"> The value to correct. </param>
            <returns> <c>0.0</c> if the given <paramref name="value"/> is infinity or NaN, <paramref name="value"/> otherwise. </returns>
        </member>
        <member name="P:SkinnedMeshImporter.SkinnedMeshProcessor.KeyframeDecimalPlaceRounding">
            <summary> Sometimes values have a slight error due to the constant number crunching. For example, the scale might go from 1 to 0.99999994. This option allows this error to be rounded away. 0 disables rounding. </summary>
        </member>
        <member name="P:SkinnedMeshImporter.SkinnedMeshProcessor.armatureData.BoneNodesByBoneName">
            <summary> The collection of bone nodes keyed by bone name. </summary>
        </member>
        <member name="T:Liru3D.Animations.Animation">
            <summary> A collection of keyframes creating a single animation. </summary>
            <remarks> Note that no changes can be made to an animation at runtime. Instances of this class are loaded through assets and an AnimationPlayer instance handles runtime changes. </remarks>
        </member>
        <member name="P:Liru3D.Animations.Animation.Name">
            <summary> The name of this animation. </summary>
        </member>
        <member name="P:Liru3D.Animations.Animation.DurationInTicks">
            <summary> How many ticks (frames) long this animation is. </summary>
        </member>
        <member name="P:Liru3D.Animations.Animation.DurationInSeconds">
            <summary> How many seconds long this animation is. </summary>
        </member>
        <member name="P:Liru3D.Animations.Animation.TicksPerSecond">
            <summary> How many ticks (frames) per second this animation plays at at 100% speed. </summary>
        </member>
        <member name="P:Liru3D.Animations.Animation.ChannelsByBoneName">
            <summary> The collection of bone channels keyed by bone name. </summary>
        </member>
        <member name="P:Liru3D.Animations.Animation.ChannelCount">
            <summary> The number of bone channels in this animation. </summary>
        </member>
        <member name="M:Liru3D.Animations.Animation.#ctor(System.String,System.Int32,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,Liru3D.Animations.BoneChannel})">
            <summary> Creates a new animation with the given data. </summary>
            <param name="name"> The name of the animation. </param>
            <param name="ticksPerSecond"> The playback speed of the animation in ticks. </param>
            <param name="durationInTicks"> How long the animation is in ticks. </param>
            <param name="channelsByBoneName"> The collection of bone channels. </param>
        </member>
        <member name="T:Liru3D.Animations.AnimationPlayer">
            <summary> Stores a collection of transforms for a <see cref="T:Liru3D.Models.SkinnedModel"/> and manipulates them by playing an <see cref="P:Liru3D.Animations.AnimationPlayer.Animation"/>. </summary>
        </member>
        <member name="F:Liru3D.Animations.AnimationPlayer.channelPlayers">
            <summary> Keeps track of each bone's current frame. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.Model">
            <summary> The current model that is being animated. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.Animation">
            <summary> The current animation that is being played. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.CurrentTime">
            <summary> The current time of this animation in seconds. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.CurrentWholeTick">
            <summary> The current whole tick of the animation. This is rounded down if the playback is forwards, and rounded up if it is backwards. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.CurrentTick">
            <summary> The current tick or "frame" of the animation. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.PlaybackDirection">
            <summary> Gets the direction of playback, which is <c>1</c> when playing forward, <c>-1</c> when playing backward, and <c>0</c> when <see cref="P:Liru3D.Animations.AnimationPlayer.PlaybackSpeed"/> is <c>0</c>. </summary>
            <remarks> Note that this does not take <see cref="P:Liru3D.Animations.AnimationPlayer.IsPlaying"/> into account, only <see cref="P:Liru3D.Animations.AnimationPlayer.PlaybackDirection"/>. </remarks>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.PlaybackSpeed">
            <summary> The speed multiplier of the playback, where <c>1.0f</c> is 100% at normal speed, and <c>-1.0f</c> is 100% at reverse speed. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.IsPlaying">
            <summary> Gets or sets the value which determines if this animation is currently playing. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.IsLooping">
            <summary> Is <c>true</c> if this animation should loop; otherwise <c>false</c>. </summary>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.ModelSpaceTransforms">
            <summary> The transform of each bone relative to the mesh. </summary>
            <remarks>
            This can be used to position objects around the bones, for example; a character holding an item. 
            This collection is created in the same order as the <see cref="P:Liru3D.Models.SkinnedModel.Bones"/> collection.
            </remarks>
        </member>
        <member name="P:Liru3D.Animations.AnimationPlayer.BoneSpaceTransforms">
            <summary> The transform of each bone in bone-space. </summary>
            <remarks>
            This is uploaded to the GPU in order to draw the skinned mesh.
            This collection is created in the same order as the <see cref="P:Liru3D.Models.SkinnedModel.Bones"/> collection.
            </remarks>
        </member>
        <member name="M:Liru3D.Animations.AnimationPlayer.#ctor(Liru3D.Models.SkinnedModel)">
            <summary> Creates a new animation player based on the given <paramref name="model"/>. </summary>
            <param name="model"> The model that is to be animated. </param>
        </member>
        <member name="M:Liru3D.Animations.AnimationPlayer.Update(Microsoft.Xna.Framework.GameTime)">
            <summary> Updates the current animation so that it plays, if <see cref="P:Liru3D.Animations.AnimationPlayer.IsPlaying"/> is <c>true</c>. </summary>
            <param name="gameTime"> The data used for timing. </param>
        </member>
        <member name="M:Liru3D.Animations.AnimationPlayer.SetEffectBones(Microsoft.Xna.Framework.Graphics.SkinnedEffect)">
            <summary> Calls <see cref="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.SetBoneTransforms(Microsoft.Xna.Framework.Matrix[])"/> with the bone space transforms. </summary>
            <param name="skinnedEffect"> The effect to set the bones of. Has no effect if this is <c>null</c>. </param>
        </member>
        <member name="M:Liru3D.Animations.AnimationPlayer.SetEffectBones(System.Action{Microsoft.Xna.Framework.Matrix[]})">
            <summary> Invokes the given <paramref name="setFunction"/> with the bone space transforms collection. </summary>
            <param name="setFunction"> The function that sets the bone space transforms of whatever needs them. </param>
        </member>
        <member name="T:Liru3D.Animations.BoneChannel">
            <summary> Hey I'm Laura from Lovebirb, and you're watching the bone channel. This class holds collections of scale, rotation, and position frames for a specific bone. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannel.BoneName">
            <summary> The name of the bone that this channel is for. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannel.Scales">
            <summary> The scales channel for the bone. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannel.Rotations">
            <summary> The rotations channel for the bone. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannel.Positions">
            <summary> The positions channel for the bone. </summary>
        </member>
        <member name="M:Liru3D.Animations.BoneChannel.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Liru3D.Animations.Keyframe{Microsoft.Xna.Framework.Vector3}},System.Collections.Generic.IReadOnlyList{Liru3D.Animations.Keyframe{Microsoft.Xna.Framework.Quaternion}},System.Collections.Generic.IReadOnlyList{Liru3D.Animations.Keyframe{Microsoft.Xna.Framework.Vector3}})">
            <summary> Creates a new channel with the given animation parameters. </summary>
            <param name="boneName"> The name of the bone. </param>
            <param name="scaleFrames"> The scale frames. </param>
            <param name="rotationFrames"> The rotation frames. </param>
            <param name="positionFrames"> The position frames. </param>
        </member>
        <member name="T:Liru3D.Animations.BoneChannelPlayer">
            <summary> Handles the playback of a single bone in an <see cref="T:Liru3D.Animations.AnimationPlayer"/>. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannelPlayer.InterpolatedScale">
            <summary> The current scale of the bone at this exact time. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannelPlayer.InterpolatedRotation">
            <summary> The current rotation of the bone at this exact time. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannelPlayer.InterpolatedPosition">
            <summary> The current position of the bone at this exact time. </summary>
        </member>
        <member name="P:Liru3D.Animations.BoneChannelPlayer.InterpolatedTransform">
            <summary> The current transform of the bone at this exact time. </summary>
            <remarks> Equal to <see cref="P:Liru3D.Animations.BoneChannelPlayer.InterpolatedScale"/> * <see cref="P:Liru3D.Animations.BoneChannelPlayer.InterpolatedRotation"/> * <see cref="P:Liru3D.Animations.BoneChannelPlayer.InterpolatedPosition"/> (SRT). </remarks>
        </member>
        <member name="P:Liru3D.Animations.BoneChannelPlayer.Channel">
            <summary> The immutable channel that this player is reading from. </summary>
        </member>
        <member name="M:Liru3D.Animations.BoneChannelPlayer.#ctor(Liru3D.Animations.AnimationPlayer)">
            <summary> Creates a new channel player with the given <paramref name="animationPlayer"/>. </summary>
            <param name="animationPlayer"> The animation player that is using this bone channel player. </param>
        </member>
        <member name="M:Liru3D.Animations.BoneChannelPlayer.Update">
            <summary> Handles smooth stepping between frames, and updating the current frame. </summary>
        </member>
        <member name="M:Liru3D.Animations.BoneChannelPlayer.ResetToFirstFrame">
            <summary> Resets this channel so that it is set to the first frame. </summary>
        </member>
        <member name="T:Liru3D.Animations.ChannelComponent`1">
            <summary> Holds a collection of <see cref="T:Liru3D.Animations.Keyframe`1"/>s and handles their retrieval in a performant way suited to interpolation. </summary>
            <typeparam name="T"> The type of value that is stored in each keyframe. </typeparam>
        </member>
        <member name="P:Liru3D.Animations.ChannelComponent`1.Keyframes">
            <summary> Every keyframe in this channel. </summary>
        </member>
        <member name="P:Liru3D.Animations.ChannelComponent`1.Count">
            <summary> Gets the amount of keyframes in this channel. </summary>
        </member>
        <member name="M:Liru3D.Animations.ChannelComponent`1.#ctor(System.Collections.Generic.IReadOnlyList{Liru3D.Animations.Keyframe{`0}})">
            <summary> Creates a new channel wrapping the given <paramref name="keyframes"/>. </summary>
            <param name="keyframes"> The read only collection of keyframes. </param>
        </member>
        <member name="M:Liru3D.Animations.ChannelComponent`1.CalculateInterpolatedFrameData(Liru3D.Animations.AnimationPlayer,Liru3D.Animations.Keyframe{`0}@,`0@,System.Single@)">
            <summary> Calculates the current frame of a playback along with some tweening data. </summary>
            <param name="animationPlayer"> The player that is currently playing this channel. </param>
            <param name="currentFrame"> The reference to the current frame of the playback. This will be automatically updated to the current frame of playback based on the <see cref="P:Liru3D.Animations.AnimationPlayer.CurrentTime"/>. </param>
            <param name="nextValue"> The value of the frame directly after the current one, used for tweening. </param>
            <param name="tweenScalar"> The value between <c>0</c> and <c>1</c> which is used to lerp between the <paramref name="currentFrame"/> and <paramref name="nextValue"/>. </param>
        </member>
        <member name="M:Liru3D.Animations.ChannelComponent`1.getFrameWrapped(System.Int32,System.Int32)">
            <summary> Gets the next frame in the sequence based on the <paramref name="playbackDirection"/> and handles wrapping so that a valid frame is always returned. </summary>
            <param name="index"> The index of the frame from which the next frame should be found. </param>
            <param name="playbackDirection"> The direction of the animation's playback. </param>
            <returns> The next frame in the sequence. </returns>
        </member>
        <member name="M:Liru3D.Animations.ChannelComponent`1.measureFrameDistance(Liru3D.Animations.AnimationPlayer,System.Single,System.Single)">
            <summary> Measures the distance between two given ticks, taking into account wrapping and playback direction, and including fractional ticks. </summary>
            <param name="animationPlayer"></param>
            <param name="firstTick"> The tick that comes "first" in the playback. For reverse playback, this tick is usually closer to the end of the animation. </param>
            <param name="secondTick"> The tick that comes "second" in the playback. </param>
            <returns> The distance in ticks between the two frames. </returns>
        </member>
        <member name="M:Liru3D.Animations.ChannelComponent`1.measureFrameDistance(Liru3D.Animations.AnimationPlayer,System.Int32,System.Int32)">
            <summary> Measures the distance between two given ticks, taking into account wrapping and playback direction. </summary>
            <param name="animationPlayer"></param>
            <param name="firstTick"> The tick that comes "first" in the playback. For reverse playback, this tick is usually closer to the end of the animation. </param>
            <param name="secondTick"> The tick that comes "second" in the playback. </param>
            <returns> The distance in ticks between the two frames. </returns>
        </member>
        <member name="T:Liru3D.Animations.Keyframe`1">
            <summary> Holds a time and a <typeparamref name="T"/> value. </summary>
        </member>
        <member name="P:Liru3D.Animations.Keyframe`1.Index">
            <summary> The index of this frame. </summary>
        </member>
        <member name="P:Liru3D.Animations.Keyframe`1.TickTime">
            <summary> The time of this frame in ticks. </summary>
        </member>
        <member name="P:Liru3D.Animations.Keyframe`1.Value">
            <summary> The value (rotation, scale, or position) of this frame. </summary>
        </member>
        <member name="M:Liru3D.Animations.Keyframe`1.#ctor(System.Int32,System.Int32,`0)">
            <summary> Creates a new keyframe with the given values. </summary>
            <param name="index"> The index of this frame within its collection. </param>
            <param name="tickTime"> The time at which this keyframe exists. </param>
            <param name="value"> The value of this keyframe. </param>
        </member>
        <member name="M:Liru3D.Animations.Keyframe`1.CompareTo(Liru3D.Animations.Keyframe{`0})">
            <summary> Compares the <see cref="P:Liru3D.Animations.Keyframe`1.TickTime"/> of this keyframe to that of the given keyframe. </summary>
            <param name="other"> The keyframe to compare against. </param>
            <returns> The result of <see cref="M:System.Int32.CompareTo(System.Int32)"/>. </returns>
        </member>
        <member name="T:Liru3D.Models.Bone">
            <summary> Represents a single bone of a model. </summary>
        </member>
        <member name="P:Liru3D.Models.Bone.Name">
            <summary> The name of this bone. </summary>
        </member>
        <member name="P:Liru3D.Models.Bone.Index">
            <summary> The index of this bone. </summary>
        </member>
        <member name="P:Liru3D.Models.Bone.Parent">
            <summary> The parent of this bone, or <c>null</c> if this is the root bone. </summary>
        </member>
        <member name="P:Liru3D.Models.Bone.HasParent">
            <summary> <c>true</c> if <see cref="P:Liru3D.Models.Bone.Parent"/> is <c>null</c>, otherwise; <c>false</c>. </summary>
        </member>
        <member name="P:Liru3D.Models.Bone.Offset">
            <summary> Converts model-space orientations into bone-space orientations. </summary>
            <remarks> 
            Basically, as the bone moves around, this helps keep track of how much the bone has moved from its default position. 
            If the bone is at its default position, this will be <see cref="P:Microsoft.Xna.Framework.Matrix.Identity"/> (or pretty close to it).
            </remarks>
        </member>
        <member name="P:Liru3D.Models.Bone.LocalTransform">
            <summary> The transform of the bone relative to its parent. If this bone has no parent, then it is relative to the model. </summary>
        </member>
        <member name="M:Liru3D.Models.Bone.CreateFrom(Liru3D.Models.SkinnedModel,Liru3D.Models.Data.BoneData)">
            <summary> Creates and returns a bone created for the given <paramref name="model"/> and from the given <paramref name="data"/>. </summary>
            <param name="model"> The model that this bone belongs to. </param>
            <param name="data"> The bone's data. </param>
            <returns> The created bone. </returns>
        </member>
        <member name="T:Liru3D.Models.Data.BoneData">
            <summary> Represents all the data of a bone loaded from a 3D model. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.BoneData.Name">
            <summary> The name of the bone. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.BoneData.Index">
            <summary> the index of this bone within the model. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.BoneData.ParentIndex">
            <summary> The index of this bone's parent bone within the model. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.BoneData.Offset">
            <summary> The offset of the bone, used when rendering. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.BoneData.LocalTransform">
            <summary> The transform of the bone relative to its parent. If this bone has no parent, then it is relative to the model. </summary>
        </member>
        <member name="T:Liru3D.Models.Data.SkinnedMeshData">
            <summary> Represents the data of a single skinned mesh residing within RAM (has not been uploaded to the graphics device). </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedMeshData.Name">
            <summary> The name of the mesh. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedMeshData.Vertices">
            <summary> The collection of vertices. Each vertex within this collection holds multiple pieces of data, see <see cref="T:Liru3D.Models.SkinnedVertex"/> for more. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedMeshData.VertexCount">
            <summary> The number of vertices in this data. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedMeshData.Indices">
            <summary> The collection of indices. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedMeshData.IndexCount">
            <summary> The number of indices in this data. </summary>
        </member>
        <member name="M:Liru3D.Models.Data.SkinnedMeshData.#ctor(System.String,Liru3D.Models.SkinnedVertex[],System.Int32[])">
            <summary> Creates a new data with the given name and collections. </summary>
            <param name="name"> The name of the mesh. </param>
            <param name="vertices"> The collection of vertices. </param>
            <param name="indices"> The collection of indices. </param>
        </member>
        <member name="T:Liru3D.Models.Data.SkinnedModelData">
            <summary> Represents the raw data of a model, residing within RAM (not yet uploaded to the graphics device). </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedModelData.Meshes">
            <summary> The collection of mesh data. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedModelData.MeshCount">
            <summary> The number of meshes in this data. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedModelData.Animations">
            <summary> The collection of animations. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedModelData.AnimationCount">
            <summary> The number of animations in this data. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedModelData.Bones">
            <summary> The collection of bone data. </summary>
        </member>
        <member name="P:Liru3D.Models.Data.SkinnedModelData.BoneCount">
            <summary> The number of bones in this data. </summary>
        </member>
        <member name="M:Liru3D.Models.Data.SkinnedModelData.#ctor(System.Collections.Generic.IReadOnlyList{Liru3D.Models.Data.SkinnedMeshData},System.Collections.Generic.List{Liru3D.Animations.Animation},System.Collections.Generic.IReadOnlyList{Liru3D.Models.Data.BoneData})">
            <summary> Creates a new model data with the given collections. </summary>
            <param name="meshes"> The collection of mesh data. </param>
            <param name="animations"> The collection of animations. </param>
            <param name="bones"> The collection of bones. </param>
        </member>
        <member name="T:Liru3D.Models.SkinnedMesh">
            <summary> A single mesh of a <see cref="T:Liru3D.Models.SkinnedModel"/>. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedMesh.Name">
            <summary> The name of the mesh. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedMesh.VertexBuffer">
            <summary> The vertex buffer object that contains the vertex data of this mesh. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedMesh.IndexBuffer">
            <summary> The index buffer object that contains the index data of this mesh. </summary>
        </member>
        <member name="M:Liru3D.Models.SkinnedMesh.CreateFrom(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Liru3D.Models.Data.SkinnedMeshData)">
            <summary> Creates and returns a new skinned mesh from the given <paramref name="data"/>, uploaded onto the given <paramref name="graphicsDevice"/>. </summary>
            <param name="graphicsDevice"> The graphics device onto which the mesh will be uploaded. </param>
            <param name="data"> The mesh data. </param>
            <returns> The created skinned mesh. </returns>
        </member>
        <member name="M:Liru3D.Models.SkinnedMesh.Draw">
            <summary> Draws this mesh. </summary>
        </member>
        <member name="T:Liru3D.Models.SkinnedVertex">
            <summary> Represents a 3D point with bone weight data to be used for skinned models. </summary>
        </member>
        <member name="F:Liru3D.Models.SkinnedVertex.VertexDeclaration">
            <summary> The declaration of a single vertex used when uploading vertex data to the GPU. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedVertex.Microsoft#Xna#Framework#Graphics#IVertexType#VertexDeclaration">
            <summary> The layout of this vertex data, compatible with the default MonoGame SkinnedEffect. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedVertex.Position">
            <summary> The position of the vertex itself. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedVertex.BlendIndices">
            <summary> The packed bone indices that affect this vertex's position. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedVertex.BlendWeights">
            <summary> The amount that each bone affects the final position of this vertex. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedVertex.Normal">
            <summary> The normal direction of this vertex. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedVertex.UV">
            <summary> The Texture co-ordinate. </summary>
        </member>
        <member name="M:Liru3D.Models.SkinnedVertex.CalculateBoneCount">
            <summary> Calculates the total number of non-zero weights of the <see cref="P:Liru3D.Models.SkinnedVertex.BlendWeights"/>, which is the total number of bones influencing this vertex. </summary>
            <returns> The calculated number of bones which influence this vertex. </returns>
        </member>
        <member name="M:Liru3D.Models.SkinnedVertex.SetNextWeight(System.Int32,System.Single)">
            <summary> Sets the next value of <see cref="P:Liru3D.Models.SkinnedVertex.BlendIndices"/> and <see cref="P:Liru3D.Models.SkinnedVertex.BlendWeights"/> to the given values. </summary>
            <param name="boneIndex"> The index of the next bone influence. </param>
            <param name="weight"> The weight of the next bone influence. </param>
        </member>
        <member name="T:Liru3D.Models.SkinnedModel">
            <summary> Contains a collection of meshes and animations. </summary>
            <remarks> Note that no changes can be made to a model, mesh, or bone at runtime. </remarks>
        </member>
        <member name="P:Liru3D.Models.SkinnedModel.Meshes">
            <summary> The collection of meshes. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedModel.Animations">
            <summary> The collection of animations loaded from this model. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedModel.AnimationCount">
            <summary> Gets the number of animations that exist in this model. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedModel.Bones">
            <summary> Gets this model's <see cref="T:Liru3D.Models.Bone"/>s. </summary>
        </member>
        <member name="P:Liru3D.Models.SkinnedModel.BoneCount">
            <summary> Gets the number of bones that this model has. </summary>
        </member>
        <member name="M:Liru3D.Models.SkinnedModel.#ctor(System.Collections.Generic.List{Liru3D.Models.SkinnedMesh},System.Collections.Generic.List{Liru3D.Animations.Animation},System.Collections.Generic.IReadOnlyList{Liru3D.Models.Bone})">
            <summary> Creates a skinned model from the given data. </summary>
            <param name="meshes"> The meshes. This cannot be null. </param>
            <param name="animations"> The animations, this may be null. </param>
            <param name="bones"> The bones. This cannot be null. </param>
        </member>
        <member name="M:Liru3D.Models.SkinnedModel.CreateFrom(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Liru3D.Models.Data.SkinnedModelData)">
            <summary> Creates and returns a skinned model from the given <paramref name="data"/> and uploaded onto the given <paramref name="graphicsDevice"/>. </summary>
            <param name="graphicsDevice"> The <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice"/> where the model should exist. </param>
            <param name="data"> The model data. </param>
            <returns> The loaded skinned model. </returns>
        </member>
    </members>
</doc>
